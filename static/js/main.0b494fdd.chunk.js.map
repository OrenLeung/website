{"version":3,"sources":["components/landingpage.jsx","components/aboutme.jsx","components/contact.jsx","components/projects.jsx","components/resume.jsx","components/main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Landing","style","width","margin","className","col","src","alt","href","target","rel","aria-hidden","Component","AboutMe","Contact","Projects","Resume","Main","exact","path","component","LandingPage","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wNAsCeA,E,iLAjCb,OACC,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACpC,kBAAC,OAAD,CAAMC,UAAU,gBACf,kBAAC,OAAD,CAAMC,IAAK,IACV,yBACCC,IAAI,gFACJC,IAAI,SACJH,UAAU,gBAGZ,yBAAKA,UAAU,eACd,wDAEA,6BACA,0FACA,yBAAKA,UAAU,gBAEd,uBAAGI,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBAC1D,uBAAGN,UAAU,wBAAwBO,cAAY,UAIlD,uBAAGH,KAAK,0CAA0CC,OAAO,SAASC,IAAI,uBACrE,uBAAGN,UAAU,sBAAsBO,cAAY,kB,GAzBjCC,aCUPC,E,iLARX,OACE,6BACE,+C,GAJcD,aCUPE,E,iLARX,OACE,6BACE,iD,GAJcF,aCUPG,E,iLARX,OACE,6BACE,kD,GAJeH,aCSRI,E,iLARb,OACC,6BACC,gD,GAJiBJ,aCiBNK,EAVF,kBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWJ,M,QCsBpBM,E,iLA7Bb,OACC,yBAAKlB,UAAU,oBACd,kBAAC,SAAD,KACC,kBAAC,SAAD,CAAQA,UAAU,eAAemB,MAAM,QAAQC,QAAM,GACpD,kBAAC,aAAD,KACC,kBAAC,IAAD,CAAMC,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGF,kBAAC,SAAD,CAAQF,MAAM,SACb,kBAAC,aAAD,KACC,kBAAC,IAAD,CAAME,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGF,kBAAC,UAAD,KACC,yBAAKrB,UAAU,iBACf,kBAAC,EAAD,a,GAvBYQ,aCMEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCTNC,IAASC,OACR,kBAAC,IAAD,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDoHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.0b494fdd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Landing extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ width: '100%', margin: 'auto' }}>\r\n\t\t\t\t<Grid className=\"landing-grid\">\r\n\t\t\t\t\t<Cell col={12}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc=\"https://cdn0.iconfinder.com/data/icons/user-pictures/100/malecostume-512.png \"\r\n\t\t\t\t\t\t\talt=\"avatar\"\r\n\t\t\t\t\t\t\tclassName=\"avatar-img\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Cell>\r\n\t\t\t\t\t<div className=\"banner-text\">\r\n\t\t\t\t\t\t<h1>Full Stack Web Developer</h1>\r\n\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<p>React | TensorFlow | Computer Vision | Flutter | Express.js</p>\r\n\t\t\t\t\t\t<div className=\"social-links\">\r\n\t\t\t\t\t\t\t{/* LinkedIn  */}\r\n\t\t\t\t\t\t\t<a href=\"https://github.com/OrenLeung\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t{/* Github  */}\r\n\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/oren-leung/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Landing;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>About Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;","import React, {Component} from 'react';\r\n\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>Contact Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\n\r\n\r\nclass Projects extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>Projects Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\n\r\nclass Resume extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Resume Page</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Resume;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport LandingPage from './landingpage';\r\nimport AboutMe from './aboutme';\r\nimport Contact from './contact';\r\nimport Projects from './projects';\r\nimport Resume from './resume';\r\n\r\nconst Main = () => (\r\n\t<Switch>\r\n\t\t<Route exact path=\"/\" component={LandingPage} />\r\n\t\t<Route path=\"/aboutme\" component={AboutMe} />\r\n\t\t<Route path=\"/contact\" component={Contact} />\r\n\t\t<Route path=\"/projects\" component={Projects} />\r\n\t\t<Route path=\"/resume\" component={Resume} />\r\n\t</Switch>\r\n);\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"demo-big-content\">\n\t\t\t\t<Layout>\n\t\t\t\t\t<Header className=\"header-color\" title=\"Title\" scroll>\n\t\t\t\t\t\t<Navigation>\n\t\t\t\t\t\t\t<Link to=\"/resume\">Resume</Link>\n\t\t\t\t\t\t\t<Link to=\"/aboutme\">About Me</Link>\n\t\t\t\t\t\t\t<Link to=\"/projects\">Projects</Link>\n\t\t\t\t\t\t\t<Link to=\"/contact\">Contact</Link>\n\t\t\t\t\t\t</Navigation>\n\t\t\t\t\t</Header>\n\t\t\t\t\t<Drawer title=\"Title\">\n\t\t\t\t\t\t<Navigation>\n\t\t\t\t\t\t\t<Link to=\"/resume\">Resume</Link>\n\t\t\t\t\t\t\t<Link to=\"/aboutme\">About Me</Link>\n\t\t\t\t\t\t\t<Link to=\"/projects\">Projects</Link>\n\t\t\t\t\t\t\t<Link to=\"/contact\">Contact</Link>\n\t\t\t\t\t\t</Navigation>\n\t\t\t\t\t</Drawer>\n\t\t\t\t\t<Content>\n\t\t\t\t\t\t<div className=\"page-content\" />\n\t\t\t\t\t\t<Main />\n\t\t\t\t\t</Content>\n\t\t\t\t</Layout>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}